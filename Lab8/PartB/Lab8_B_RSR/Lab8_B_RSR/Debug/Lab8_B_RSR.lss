
Lab8_B_RSR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000690  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003a  00802000  00000690  00000724  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000089a  0080203a  0080203a  0000075e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000075e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  0000078e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000e04  00000000  00000000  00000816  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000035d  00000000  00000000  0000161a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005d3  00000000  00000000  00001977  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00001f4c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000143b  00000000  00000000  00002134  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000074e  00000000  00000000  0000356f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00003cbd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	1f c1       	rjmp	.+574    	; 0x244 <__bad_interrupt>
   6:	00 00       	nop
   8:	1d c1       	rjmp	.+570    	; 0x244 <__bad_interrupt>
   a:	00 00       	nop
   c:	1b c1       	rjmp	.+566    	; 0x244 <__bad_interrupt>
   e:	00 00       	nop
  10:	19 c1       	rjmp	.+562    	; 0x244 <__bad_interrupt>
  12:	00 00       	nop
  14:	17 c1       	rjmp	.+558    	; 0x244 <__bad_interrupt>
  16:	00 00       	nop
  18:	15 c1       	rjmp	.+554    	; 0x244 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	13 c1       	rjmp	.+550    	; 0x244 <__bad_interrupt>
  1e:	00 00       	nop
  20:	11 c1       	rjmp	.+546    	; 0x244 <__bad_interrupt>
  22:	00 00       	nop
  24:	0f c1       	rjmp	.+542    	; 0x244 <__bad_interrupt>
  26:	00 00       	nop
  28:	0d c1       	rjmp	.+538    	; 0x244 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	0b c1       	rjmp	.+534    	; 0x244 <__bad_interrupt>
  2e:	00 00       	nop
  30:	09 c1       	rjmp	.+530    	; 0x244 <__bad_interrupt>
  32:	00 00       	nop
  34:	07 c1       	rjmp	.+526    	; 0x244 <__bad_interrupt>
  36:	00 00       	nop
  38:	05 c1       	rjmp	.+522    	; 0x244 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	03 c1       	rjmp	.+518    	; 0x244 <__bad_interrupt>
  3e:	00 00       	nop
  40:	01 c1       	rjmp	.+514    	; 0x244 <__bad_interrupt>
  42:	00 00       	nop
  44:	ff c0       	rjmp	.+510    	; 0x244 <__bad_interrupt>
  46:	00 00       	nop
  48:	fd c0       	rjmp	.+506    	; 0x244 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	fb c0       	rjmp	.+502    	; 0x244 <__bad_interrupt>
  4e:	00 00       	nop
  50:	f9 c0       	rjmp	.+498    	; 0x244 <__bad_interrupt>
  52:	00 00       	nop
  54:	f7 c0       	rjmp	.+494    	; 0x244 <__bad_interrupt>
  56:	00 00       	nop
  58:	f5 c0       	rjmp	.+490    	; 0x244 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	f3 c0       	rjmp	.+486    	; 0x244 <__bad_interrupt>
  5e:	00 00       	nop
  60:	f1 c0       	rjmp	.+482    	; 0x244 <__bad_interrupt>
  62:	00 00       	nop
  64:	ef c0       	rjmp	.+478    	; 0x244 <__bad_interrupt>
  66:	00 00       	nop
  68:	ed c0       	rjmp	.+474    	; 0x244 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	eb c0       	rjmp	.+470    	; 0x244 <__bad_interrupt>
  6e:	00 00       	nop
  70:	e9 c0       	rjmp	.+466    	; 0x244 <__bad_interrupt>
  72:	00 00       	nop
  74:	e7 c0       	rjmp	.+462    	; 0x244 <__bad_interrupt>
  76:	00 00       	nop
  78:	e5 c0       	rjmp	.+458    	; 0x244 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	e3 c0       	rjmp	.+454    	; 0x244 <__bad_interrupt>
  7e:	00 00       	nop
  80:	e1 c0       	rjmp	.+450    	; 0x244 <__bad_interrupt>
  82:	00 00       	nop
  84:	df c0       	rjmp	.+446    	; 0x244 <__bad_interrupt>
  86:	00 00       	nop
  88:	dd c0       	rjmp	.+442    	; 0x244 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	db c0       	rjmp	.+438    	; 0x244 <__bad_interrupt>
  8e:	00 00       	nop
  90:	d9 c0       	rjmp	.+434    	; 0x244 <__bad_interrupt>
  92:	00 00       	nop
  94:	d7 c0       	rjmp	.+430    	; 0x244 <__bad_interrupt>
  96:	00 00       	nop
  98:	d5 c0       	rjmp	.+426    	; 0x244 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	d3 c0       	rjmp	.+422    	; 0x244 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	d1 c0       	rjmp	.+418    	; 0x244 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	cf c0       	rjmp	.+414    	; 0x244 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	cd c0       	rjmp	.+410    	; 0x244 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	cb c0       	rjmp	.+406    	; 0x244 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	c9 c0       	rjmp	.+402    	; 0x244 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	c7 c0       	rjmp	.+398    	; 0x244 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	c5 c0       	rjmp	.+394    	; 0x244 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	c3 c0       	rjmp	.+390    	; 0x244 <__bad_interrupt>
  be:	00 00       	nop
  c0:	c1 c0       	rjmp	.+386    	; 0x244 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	bf c0       	rjmp	.+382    	; 0x244 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	bd c0       	rjmp	.+378    	; 0x244 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	bb c0       	rjmp	.+374    	; 0x244 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	b9 c0       	rjmp	.+370    	; 0x244 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	b7 c0       	rjmp	.+366    	; 0x244 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	b5 c0       	rjmp	.+362    	; 0x244 <__bad_interrupt>
  da:	00 00       	nop
  dc:	df c1       	rjmp	.+958    	; 0x49c <__vector_55>
  de:	00 00       	nop
  e0:	b1 c0       	rjmp	.+354    	; 0x244 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	af c0       	rjmp	.+350    	; 0x244 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	ad c0       	rjmp	.+346    	; 0x244 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	ab c0       	rjmp	.+342    	; 0x244 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	a9 c0       	rjmp	.+338    	; 0x244 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	a7 c0       	rjmp	.+334    	; 0x244 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	a5 c0       	rjmp	.+330    	; 0x244 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	a3 c0       	rjmp	.+326    	; 0x244 <__bad_interrupt>
  fe:	00 00       	nop
 100:	a1 c0       	rjmp	.+322    	; 0x244 <__bad_interrupt>
 102:	00 00       	nop
 104:	9f c0       	rjmp	.+318    	; 0x244 <__bad_interrupt>
 106:	00 00       	nop
 108:	9d c0       	rjmp	.+314    	; 0x244 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	9b c0       	rjmp	.+310    	; 0x244 <__bad_interrupt>
 10e:	00 00       	nop
 110:	99 c0       	rjmp	.+306    	; 0x244 <__bad_interrupt>
 112:	00 00       	nop
 114:	97 c0       	rjmp	.+302    	; 0x244 <__bad_interrupt>
 116:	00 00       	nop
 118:	95 c0       	rjmp	.+298    	; 0x244 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	93 c0       	rjmp	.+294    	; 0x244 <__bad_interrupt>
 11e:	00 00       	nop
 120:	91 c0       	rjmp	.+290    	; 0x244 <__bad_interrupt>
 122:	00 00       	nop
 124:	8f c0       	rjmp	.+286    	; 0x244 <__bad_interrupt>
 126:	00 00       	nop
 128:	8d c0       	rjmp	.+282    	; 0x244 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	8b c0       	rjmp	.+278    	; 0x244 <__bad_interrupt>
 12e:	00 00       	nop
 130:	89 c0       	rjmp	.+274    	; 0x244 <__bad_interrupt>
 132:	00 00       	nop
 134:	87 c0       	rjmp	.+270    	; 0x244 <__bad_interrupt>
 136:	00 00       	nop
 138:	85 c0       	rjmp	.+266    	; 0x244 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	83 c0       	rjmp	.+262    	; 0x244 <__bad_interrupt>
 13e:	00 00       	nop
 140:	81 c0       	rjmp	.+258    	; 0x244 <__bad_interrupt>
 142:	00 00       	nop
 144:	7f c0       	rjmp	.+254    	; 0x244 <__bad_interrupt>
 146:	00 00       	nop
 148:	7d c0       	rjmp	.+250    	; 0x244 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	7b c0       	rjmp	.+246    	; 0x244 <__bad_interrupt>
 14e:	00 00       	nop
 150:	79 c0       	rjmp	.+242    	; 0x244 <__bad_interrupt>
 152:	00 00       	nop
 154:	77 c0       	rjmp	.+238    	; 0x244 <__bad_interrupt>
 156:	00 00       	nop
 158:	75 c0       	rjmp	.+234    	; 0x244 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	73 c0       	rjmp	.+230    	; 0x244 <__bad_interrupt>
 15e:	00 00       	nop
 160:	71 c0       	rjmp	.+226    	; 0x244 <__bad_interrupt>
 162:	00 00       	nop
 164:	6f c0       	rjmp	.+222    	; 0x244 <__bad_interrupt>
 166:	00 00       	nop
 168:	6d c0       	rjmp	.+218    	; 0x244 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	6b c0       	rjmp	.+214    	; 0x244 <__bad_interrupt>
 16e:	00 00       	nop
 170:	69 c0       	rjmp	.+210    	; 0x244 <__bad_interrupt>
 172:	00 00       	nop
 174:	67 c0       	rjmp	.+206    	; 0x244 <__bad_interrupt>
 176:	00 00       	nop
 178:	65 c0       	rjmp	.+202    	; 0x244 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	63 c0       	rjmp	.+198    	; 0x244 <__bad_interrupt>
 17e:	00 00       	nop
 180:	61 c0       	rjmp	.+194    	; 0x244 <__bad_interrupt>
 182:	00 00       	nop
 184:	5f c0       	rjmp	.+190    	; 0x244 <__bad_interrupt>
 186:	00 00       	nop
 188:	5d c0       	rjmp	.+186    	; 0x244 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	5b c0       	rjmp	.+182    	; 0x244 <__bad_interrupt>
 18e:	00 00       	nop
 190:	59 c0       	rjmp	.+178    	; 0x244 <__bad_interrupt>
 192:	00 00       	nop
 194:	57 c0       	rjmp	.+174    	; 0x244 <__bad_interrupt>
 196:	00 00       	nop
 198:	55 c0       	rjmp	.+170    	; 0x244 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	53 c0       	rjmp	.+166    	; 0x244 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	51 c0       	rjmp	.+162    	; 0x244 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	4f c0       	rjmp	.+158    	; 0x244 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	4d c0       	rjmp	.+154    	; 0x244 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	4b c0       	rjmp	.+150    	; 0x244 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	49 c0       	rjmp	.+146    	; 0x244 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	47 c0       	rjmp	.+142    	; 0x244 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	45 c0       	rjmp	.+138    	; 0x244 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	43 c0       	rjmp	.+134    	; 0x244 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	41 c0       	rjmp	.+130    	; 0x244 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	3f c0       	rjmp	.+126    	; 0x244 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	3d c0       	rjmp	.+122    	; 0x244 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	3b c0       	rjmp	.+118    	; 0x244 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	39 c0       	rjmp	.+114    	; 0x244 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	37 c0       	rjmp	.+110    	; 0x244 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	35 c0       	rjmp	.+106    	; 0x244 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	33 c0       	rjmp	.+102    	; 0x244 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	31 c0       	rjmp	.+98     	; 0x244 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	2f c0       	rjmp	.+94     	; 0x244 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	2d c0       	rjmp	.+90     	; 0x244 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	2b c0       	rjmp	.+86     	; 0x244 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	29 c0       	rjmp	.+82     	; 0x244 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	27 c0       	rjmp	.+78     	; 0x244 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	25 c0       	rjmp	.+74     	; 0x244 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e0 e9       	ldi	r30, 0x90	; 144
 21c:	f6 e0       	ldi	r31, 0x06	; 6
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	aa 33       	cpi	r26, 0x3A	; 58
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59

00000230 <__do_clear_bss>:
 230:	28 e2       	ldi	r18, 0x28	; 40
 232:	aa e3       	ldi	r26, 0x3A	; 58
 234:	b0 e2       	ldi	r27, 0x20	; 32
 236:	01 c0       	rjmp	.+2      	; 0x23a <.do_clear_bss_start>

00000238 <.do_clear_bss_loop>:
 238:	1d 92       	st	X+, r1

0000023a <.do_clear_bss_start>:
 23a:	a4 3d       	cpi	r26, 0xD4	; 212
 23c:	b2 07       	cpc	r27, r18
 23e:	e1 f7       	brne	.-8      	; 0x238 <.do_clear_bss_loop>
 240:	d6 d1       	rcall	.+940    	; 0x5ee <main>
 242:	24 c2       	rjmp	.+1096   	; 0x68c <_exit>

00000244 <__bad_interrupt>:
 244:	dd ce       	rjmp	.-582    	; 0x0 <__vectors>

00000246 <init_EBI>:
		}
		flag = 0;
	}
	
	return num;
}
 246:	87 e3       	ldi	r24, 0x37	; 55
 248:	80 93 e0 06 	sts	0x06E0, r24
 24c:	83 e3       	ldi	r24, 0x33	; 51
 24e:	80 93 e4 06 	sts	0x06E4, r24
 252:	8f ef       	ldi	r24, 0xFF	; 255
 254:	80 93 20 07 	sts	0x0720, r24
 258:	e0 e4       	ldi	r30, 0x40	; 64
 25a:	f4 e0       	ldi	r31, 0x04	; 4
 25c:	81 e0       	ldi	r24, 0x01	; 1
 25e:	80 83       	st	Z, r24
 260:	13 8a       	std	Z+19, r1	; 0x13
 262:	80 e4       	ldi	r24, 0x40	; 64
 264:	82 8b       	std	Z+18, r24	; 0x12
 266:	81 e1       	ldi	r24, 0x11	; 17
 268:	80 8b       	std	Z+16, r24	; 0x10
 26a:	80 e0       	ldi	r24, 0x00	; 0
 26c:	9b e1       	ldi	r25, 0x1B	; 27
 26e:	86 8b       	std	Z+22, r24	; 0x16
 270:	97 8b       	std	Z+23, r25	; 0x17
 272:	81 e2       	ldi	r24, 0x21	; 33
 274:	84 8b       	std	Z+20, r24	; 0x14
 276:	08 95       	ret

00000278 <check_BF>:
 278:	cf 93       	push	r28
 27a:	df 93       	push	r29
 27c:	1f 92       	push	r1
 27e:	cd b7       	in	r28, 0x3d	; 61
 280:	de b7       	in	r29, 0x3e	; 62
 282:	19 82       	std	Y+1, r1	; 0x01
 284:	80 e0       	ldi	r24, 0x00	; 0
 286:	90 e1       	ldi	r25, 0x10	; 16
 288:	ab e1       	ldi	r26, 0x1B	; 27
 28a:	b0 e0       	ldi	r27, 0x00	; 0
 28c:	0b b6       	in	r0, 0x3b	; 59
 28e:	ab bf       	out	0x3b, r26	; 59
 290:	fc 01       	movw	r30, r24
 292:	20 81       	ld	r18, Z
 294:	0b be       	out	0x3b, r0	; 59
 296:	29 83       	std	Y+1, r18	; 0x01
 298:	29 81       	ldd	r18, Y+1	; 0x01
 29a:	22 23       	and	r18, r18
 29c:	bc f3       	brlt	.-18     	; 0x28c <check_BF+0x14>
 29e:	0f 90       	pop	r0
 2a0:	df 91       	pop	r29
 2a2:	cf 91       	pop	r28
 2a4:	08 95       	ret

000002a6 <init_lcd>:
 2a6:	e8 df       	rcall	.-48     	; 0x278 <check_BF>
 2a8:	28 e3       	ldi	r18, 0x38	; 56
 2aa:	80 e0       	ldi	r24, 0x00	; 0
 2ac:	90 e1       	ldi	r25, 0x10	; 16
 2ae:	ab e1       	ldi	r26, 0x1B	; 27
 2b0:	b0 e0       	ldi	r27, 0x00	; 0
 2b2:	0b b6       	in	r0, 0x3b	; 59
 2b4:	ab bf       	out	0x3b, r26	; 59
 2b6:	fc 01       	movw	r30, r24
 2b8:	20 83       	st	Z, r18
 2ba:	0b be       	out	0x3b, r0	; 59
 2bc:	dd df       	rcall	.-70     	; 0x278 <check_BF>
 2be:	2f e0       	ldi	r18, 0x0F	; 15
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	90 e1       	ldi	r25, 0x10	; 16
 2c4:	ab e1       	ldi	r26, 0x1B	; 27
 2c6:	b0 e0       	ldi	r27, 0x00	; 0
 2c8:	0b b6       	in	r0, 0x3b	; 59
 2ca:	ab bf       	out	0x3b, r26	; 59
 2cc:	fc 01       	movw	r30, r24
 2ce:	20 83       	st	Z, r18
 2d0:	0b be       	out	0x3b, r0	; 59
 2d2:	d2 df       	rcall	.-92     	; 0x278 <check_BF>
 2d4:	21 e0       	ldi	r18, 0x01	; 1
 2d6:	80 e0       	ldi	r24, 0x00	; 0
 2d8:	90 e1       	ldi	r25, 0x10	; 16
 2da:	ab e1       	ldi	r26, 0x1B	; 27
 2dc:	b0 e0       	ldi	r27, 0x00	; 0
 2de:	0b b6       	in	r0, 0x3b	; 59
 2e0:	ab bf       	out	0x3b, r26	; 59
 2e2:	fc 01       	movw	r30, r24
 2e4:	20 83       	st	Z, r18
 2e6:	0b be       	out	0x3b, r0	; 59
 2e8:	c7 cf       	rjmp	.-114    	; 0x278 <check_BF>
 2ea:	08 95       	ret

000002ec <out_string>:
 2ec:	7f 92       	push	r7
 2ee:	8f 92       	push	r8
 2f0:	9f 92       	push	r9
 2f2:	af 92       	push	r10
 2f4:	bf 92       	push	r11
 2f6:	cf 92       	push	r12
 2f8:	df 92       	push	r13
 2fa:	ef 92       	push	r14
 2fc:	ff 92       	push	r15
 2fe:	0f 93       	push	r16
 300:	1f 93       	push	r17
 302:	cf 93       	push	r28
 304:	df 93       	push	r29
 306:	ec 01       	movw	r28, r24
 308:	88 81       	ld	r24, Y
 30a:	81 11       	cpse	r24, r1
 30c:	19 c0       	rjmp	.+50     	; 0x340 <out_string+0x54>
 30e:	16 c0       	rjmp	.+44     	; 0x33c <out_string+0x50>
 310:	b3 df       	rcall	.-154    	; 0x278 <check_BF>
 312:	00 31       	cpi	r16, 0x10	; 16
 314:	11 05       	cpc	r17, r1
 316:	31 f4       	brne	.+12     	; 0x324 <out_string+0x38>
 318:	0b b6       	in	r0, 0x3b	; 59
 31a:	ab be       	out	0x3b, r10	; 59
 31c:	f4 01       	movw	r30, r8
 31e:	70 82       	st	Z, r7
 320:	0b be       	out	0x3b, r0	; 59
 322:	aa df       	rcall	.-172    	; 0x278 <check_BF>
 324:	a9 df       	rcall	.-174    	; 0x278 <check_BF>
 326:	89 91       	ld	r24, Y+
 328:	0b b6       	in	r0, 0x3b	; 59
 32a:	eb be       	out	0x3b, r14	; 59
 32c:	f6 01       	movw	r30, r12
 32e:	80 83       	st	Z, r24
 330:	0b be       	out	0x3b, r0	; 59
 332:	0f 5f       	subi	r16, 0xFF	; 255
 334:	1f 4f       	sbci	r17, 0xFF	; 255
 336:	88 81       	ld	r24, Y
 338:	81 11       	cpse	r24, r1
 33a:	ea cf       	rjmp	.-44     	; 0x310 <out_string+0x24>
 33c:	9d df       	rcall	.-198    	; 0x278 <check_BF>
 33e:	19 c0       	rjmp	.+50     	; 0x372 <out_string+0x86>
 340:	9b df       	rcall	.-202    	; 0x278 <check_BF>
 342:	00 e0       	ldi	r16, 0x00	; 0
 344:	10 e0       	ldi	r17, 0x00	; 0
 346:	0f 2e       	mov	r0, r31
 348:	cc 24       	eor	r12, r12
 34a:	c3 94       	inc	r12
 34c:	f0 e1       	ldi	r31, 0x10	; 16
 34e:	df 2e       	mov	r13, r31
 350:	fb e1       	ldi	r31, 0x1B	; 27
 352:	ef 2e       	mov	r14, r31
 354:	f1 2c       	mov	r15, r1
 356:	f0 2d       	mov	r31, r0
 358:	0f 2e       	mov	r0, r31
 35a:	81 2c       	mov	r8, r1
 35c:	f0 e1       	ldi	r31, 0x10	; 16
 35e:	9f 2e       	mov	r9, r31
 360:	fb e1       	ldi	r31, 0x1B	; 27
 362:	af 2e       	mov	r10, r31
 364:	b1 2c       	mov	r11, r1
 366:	f0 2d       	mov	r31, r0
 368:	0f 2e       	mov	r0, r31
 36a:	f0 ec       	ldi	r31, 0xC0	; 192
 36c:	7f 2e       	mov	r7, r31
 36e:	f0 2d       	mov	r31, r0
 370:	d9 cf       	rjmp	.-78     	; 0x324 <out_string+0x38>
 372:	df 91       	pop	r29
 374:	cf 91       	pop	r28
 376:	1f 91       	pop	r17
 378:	0f 91       	pop	r16
 37a:	ff 90       	pop	r15
 37c:	ef 90       	pop	r14
 37e:	df 90       	pop	r13
 380:	cf 90       	pop	r12
 382:	bf 90       	pop	r11
 384:	af 90       	pop	r10
 386:	9f 90       	pop	r9
 388:	8f 90       	pop	r8
 38a:	7f 90       	pop	r7
 38c:	08 95       	ret

0000038e <k_init>:
 38e:	88 e1       	ldi	r24, 0x18	; 24
 390:	80 93 b4 06 	sts	0x06B4, r24
 394:	80 93 b5 06 	sts	0x06B5, r24
 398:	80 93 b6 06 	sts	0x06B6, r24
 39c:	80 93 b7 06 	sts	0x06B7, r24
 3a0:	8f e0       	ldi	r24, 0x0F	; 15
 3a2:	80 93 a1 06 	sts	0x06A1, r24
 3a6:	80 ef       	ldi	r24, 0xF0	; 240
 3a8:	80 93 a2 06 	sts	0x06A2, r24
 3ac:	08 95       	ret

000003ae <get_key>:
 3ae:	8e e0       	ldi	r24, 0x0E	; 14
 3b0:	80 93 a4 06 	sts	0x06A4, r24
 3b4:	00 00       	nop
 3b6:	80 91 a8 06 	lds	r24, 0x06A8
 3ba:	8e 3e       	cpi	r24, 0xEE	; 238
 3bc:	91 f1       	breq	.+100    	; 0x422 <get_key+0x74>
 3be:	8e 3d       	cpi	r24, 0xDE	; 222
 3c0:	91 f1       	breq	.+100    	; 0x426 <get_key+0x78>
 3c2:	8e 3b       	cpi	r24, 0xBE	; 190
 3c4:	91 f1       	breq	.+100    	; 0x42a <get_key+0x7c>
 3c6:	8e 37       	cpi	r24, 0x7E	; 126
 3c8:	91 f1       	breq	.+100    	; 0x42e <get_key+0x80>
 3ca:	8d e0       	ldi	r24, 0x0D	; 13
 3cc:	80 93 a4 06 	sts	0x06A4, r24
 3d0:	00 00       	nop
 3d2:	80 91 a8 06 	lds	r24, 0x06A8
 3d6:	8d 3e       	cpi	r24, 0xED	; 237
 3d8:	61 f1       	breq	.+88     	; 0x432 <get_key+0x84>
 3da:	8d 3d       	cpi	r24, 0xDD	; 221
 3dc:	61 f1       	breq	.+88     	; 0x436 <get_key+0x88>
 3de:	8d 3b       	cpi	r24, 0xBD	; 189
 3e0:	61 f1       	breq	.+88     	; 0x43a <get_key+0x8c>
 3e2:	8d 37       	cpi	r24, 0x7D	; 125
 3e4:	61 f1       	breq	.+88     	; 0x43e <get_key+0x90>
 3e6:	8b e0       	ldi	r24, 0x0B	; 11
 3e8:	80 93 a4 06 	sts	0x06A4, r24
 3ec:	00 00       	nop
 3ee:	80 91 a8 06 	lds	r24, 0x06A8
 3f2:	8b 3e       	cpi	r24, 0xEB	; 235
 3f4:	31 f1       	breq	.+76     	; 0x442 <get_key+0x94>
 3f6:	8b 3d       	cpi	r24, 0xDB	; 219
 3f8:	31 f1       	breq	.+76     	; 0x446 <get_key+0x98>
 3fa:	8b 3b       	cpi	r24, 0xBB	; 187
 3fc:	31 f1       	breq	.+76     	; 0x44a <get_key+0x9c>
 3fe:	8b 37       	cpi	r24, 0x7B	; 123
 400:	31 f1       	breq	.+76     	; 0x44e <get_key+0xa0>
 402:	87 e0       	ldi	r24, 0x07	; 7
 404:	80 93 a4 06 	sts	0x06A4, r24
 408:	00 00       	nop
 40a:	80 91 a8 06 	lds	r24, 0x06A8
 40e:	87 3e       	cpi	r24, 0xE7	; 231
 410:	01 f1       	breq	.+64     	; 0x452 <get_key+0xa4>
 412:	87 3d       	cpi	r24, 0xD7	; 215
 414:	01 f1       	breq	.+64     	; 0x456 <get_key+0xa8>
 416:	87 3b       	cpi	r24, 0xB7	; 183
 418:	01 f1       	breq	.+64     	; 0x45a <get_key+0xac>
 41a:	87 37       	cpi	r24, 0x77	; 119
 41c:	01 f5       	brne	.+64     	; 0x45e <get_key+0xb0>
 41e:	84 e4       	ldi	r24, 0x44	; 68
 420:	08 95       	ret
 422:	81 e3       	ldi	r24, 0x31	; 49
 424:	08 95       	ret
 426:	84 e3       	ldi	r24, 0x34	; 52
 428:	08 95       	ret
 42a:	87 e3       	ldi	r24, 0x37	; 55
 42c:	08 95       	ret
 42e:	8a e2       	ldi	r24, 0x2A	; 42
 430:	08 95       	ret
 432:	82 e3       	ldi	r24, 0x32	; 50
 434:	08 95       	ret
 436:	85 e3       	ldi	r24, 0x35	; 53
 438:	08 95       	ret
 43a:	88 e3       	ldi	r24, 0x38	; 56
 43c:	08 95       	ret
 43e:	80 e3       	ldi	r24, 0x30	; 48
 440:	08 95       	ret
 442:	83 e3       	ldi	r24, 0x33	; 51
 444:	08 95       	ret
 446:	86 e3       	ldi	r24, 0x36	; 54
 448:	08 95       	ret
 44a:	89 e3       	ldi	r24, 0x39	; 57
 44c:	08 95       	ret
 44e:	83 e2       	ldi	r24, 0x23	; 35
 450:	08 95       	ret
 452:	81 e4       	ldi	r24, 0x41	; 65
 454:	08 95       	ret
 456:	82 e4       	ldi	r24, 0x42	; 66
 458:	08 95       	ret
 45a:	83 e4       	ldi	r24, 0x43	; 67
 45c:	08 95       	ret
 45e:	86 e2       	ldi	r24, 0x26	; 38
 460:	08 95       	ret

00000462 <init_remote>:
 462:	f8 94       	cli
 464:	90 e1       	ldi	r25, 0x10	; 16
 466:	90 93 82 06 	sts	0x0682, r25
 46a:	81 e0       	ldi	r24, 0x01	; 1
 46c:	80 93 40 0a 	sts	0x0A40, r24
 470:	90 93 41 0a 	sts	0x0A41, r25
 474:	98 e2       	ldi	r25, 0x28	; 40
 476:	90 93 43 0a 	sts	0x0A43, r25
 47a:	80 93 47 0a 	sts	0x0A47, r24
 47e:	10 92 94 06 	sts	0x0694, r1
 482:	80 93 a2 00 	sts	0x00A2, r24
 486:	84 e7       	ldi	r24, 0x74	; 116
 488:	80 93 80 01 	sts	0x0180, r24
 48c:	8f ef       	ldi	r24, 0xFF	; 255
 48e:	9f e7       	ldi	r25, 0x7F	; 127
 490:	80 93 66 0a 	sts	0x0A66, r24
 494:	90 93 67 0a 	sts	0x0A67, r25
 498:	78 94       	sei
 49a:	08 95       	ret

0000049c <__vector_55>:
 49c:	1f 92       	push	r1
 49e:	0f 92       	push	r0
 4a0:	0f b6       	in	r0, 0x3f	; 63
 4a2:	0f 92       	push	r0
 4a4:	11 24       	eor	r1, r1
 4a6:	08 b6       	in	r0, 0x38	; 56
 4a8:	0f 92       	push	r0
 4aa:	18 be       	out	0x38, r1	; 56
 4ac:	0b b6       	in	r0, 0x3b	; 59
 4ae:	0f 92       	push	r0
 4b0:	1b be       	out	0x3b, r1	; 59
 4b2:	8f 93       	push	r24
 4b4:	9f 93       	push	r25
 4b6:	ef 93       	push	r30
 4b8:	ff 93       	push	r31
 4ba:	00 00       	nop
 4bc:	10 92 60 0a 	sts	0x0A60, r1
 4c0:	10 92 61 0a 	sts	0x0A61, r1
 4c4:	e0 91 3a 20 	lds	r30, 0x203A
 4c8:	f0 91 3b 20 	lds	r31, 0x203B
 4cc:	80 91 68 0a 	lds	r24, 0x0A68
 4d0:	90 91 69 0a 	lds	r25, 0x0A69
 4d4:	ee 0f       	add	r30, r30
 4d6:	ff 1f       	adc	r31, r31
 4d8:	e4 5c       	subi	r30, 0xC4	; 196
 4da:	ff 4d       	sbci	r31, 0xDF	; 223
 4dc:	80 83       	st	Z, r24
 4de:	91 83       	std	Z+1, r25	; 0x01
 4e0:	80 91 3a 20 	lds	r24, 0x203A
 4e4:	90 91 3b 20 	lds	r25, 0x203B
 4e8:	01 96       	adiw	r24, 0x01	; 1
 4ea:	80 93 3a 20 	sts	0x203A, r24
 4ee:	90 93 3b 20 	sts	0x203B, r25
 4f2:	00 00       	nop
 4f4:	ff 91       	pop	r31
 4f6:	ef 91       	pop	r30
 4f8:	9f 91       	pop	r25
 4fa:	8f 91       	pop	r24
 4fc:	0f 90       	pop	r0
 4fe:	0b be       	out	0x3b, r0	; 59
 500:	0f 90       	pop	r0
 502:	08 be       	out	0x38, r0	; 56
 504:	0f 90       	pop	r0
 506:	0f be       	out	0x3f, r0	; 63
 508:	0f 90       	pop	r0
 50a:	1f 90       	pop	r1
 50c:	18 95       	reti

0000050e <record_key>:
 50e:	ec e3       	ldi	r30, 0x3C	; 60
 510:	f0 e2       	ldi	r31, 0x20	; 32
 512:	28 ec       	ldi	r18, 0xC8	; 200
 514:	ac 01       	movw	r20, r24
 516:	24 9f       	mul	r18, r20
 518:	c0 01       	movw	r24, r0
 51a:	25 9f       	mul	r18, r21
 51c:	90 0d       	add	r25, r0
 51e:	11 24       	eor	r1, r1
 520:	dc 01       	movw	r26, r24
 522:	ac 5f       	subi	r26, 0xFC	; 252
 524:	be 4d       	sbci	r27, 0xDE	; 222
 526:	24 e0       	ldi	r18, 0x04	; 4
 528:	31 e2       	ldi	r19, 0x21	; 33
 52a:	81 91       	ld	r24, Z+
 52c:	91 91       	ld	r25, Z+
 52e:	8d 93       	st	X+, r24
 530:	9d 93       	st	X+, r25
 532:	e2 17       	cp	r30, r18
 534:	f3 07       	cpc	r31, r19
 536:	c9 f7       	brne	.-14     	; 0x52a <record_key+0x1c>
 538:	08 95       	ret

0000053a <delay>:

void delay () {
 53a:	cf 93       	push	r28
 53c:	df 93       	push	r29
 53e:	00 d0       	rcall	.+0      	; 0x540 <delay+0x6>
 540:	1f 92       	push	r1
 542:	cd b7       	in	r28, 0x3d	; 61
 544:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;            // Volatile prevents compiler optimization
	for(ticks=0;ticks<=100000;ticks++);  // Convenient delay
 546:	19 82       	std	Y+1, r1	; 0x01
 548:	1a 82       	std	Y+2, r1	; 0x02
 54a:	1b 82       	std	Y+3, r1	; 0x03
 54c:	1c 82       	std	Y+4, r1	; 0x04
 54e:	89 81       	ldd	r24, Y+1	; 0x01
 550:	9a 81       	ldd	r25, Y+2	; 0x02
 552:	ab 81       	ldd	r26, Y+3	; 0x03
 554:	bc 81       	ldd	r27, Y+4	; 0x04
 556:	81 3a       	cpi	r24, 0xA1	; 161
 558:	96 48       	sbci	r25, 0x86	; 134
 55a:	a1 40       	sbci	r26, 0x01	; 1
 55c:	b1 05       	cpc	r27, r1
 55e:	a0 f4       	brcc	.+40     	; 0x588 <delay+0x4e>
 560:	89 81       	ldd	r24, Y+1	; 0x01
 562:	9a 81       	ldd	r25, Y+2	; 0x02
 564:	ab 81       	ldd	r26, Y+3	; 0x03
 566:	bc 81       	ldd	r27, Y+4	; 0x04
 568:	01 96       	adiw	r24, 0x01	; 1
 56a:	a1 1d       	adc	r26, r1
 56c:	b1 1d       	adc	r27, r1
 56e:	89 83       	std	Y+1, r24	; 0x01
 570:	9a 83       	std	Y+2, r25	; 0x02
 572:	ab 83       	std	Y+3, r26	; 0x03
 574:	bc 83       	std	Y+4, r27	; 0x04
 576:	89 81       	ldd	r24, Y+1	; 0x01
 578:	9a 81       	ldd	r25, Y+2	; 0x02
 57a:	ab 81       	ldd	r26, Y+3	; 0x03
 57c:	bc 81       	ldd	r27, Y+4	; 0x04
 57e:	81 3a       	cpi	r24, 0xA1	; 161
 580:	96 48       	sbci	r25, 0x86	; 134
 582:	a1 40       	sbci	r26, 0x01	; 1
 584:	b1 05       	cpc	r27, r1
 586:	60 f3       	brcs	.-40     	; 0x560 <delay+0x26>
}
 588:	24 96       	adiw	r28, 0x04	; 4
 58a:	cd bf       	out	0x3d, r28	; 61
 58c:	de bf       	out	0x3e, r29	; 62
 58e:	df 91       	pop	r29
 590:	cf 91       	pop	r28
 592:	08 95       	ret

00000594 <delay2>:

void delay2 () {
 594:	cf 93       	push	r28
 596:	df 93       	push	r29
 598:	00 d0       	rcall	.+0      	; 0x59a <delay2+0x6>
 59a:	1f 92       	push	r1
 59c:	cd b7       	in	r28, 0x3d	; 61
 59e:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;            // Volatile prevents compiler optimization
	for(ticks=0;ticks<=10000;ticks++);  // Convenient delay
 5a0:	19 82       	std	Y+1, r1	; 0x01
 5a2:	1a 82       	std	Y+2, r1	; 0x02
 5a4:	1b 82       	std	Y+3, r1	; 0x03
 5a6:	1c 82       	std	Y+4, r1	; 0x04
 5a8:	89 81       	ldd	r24, Y+1	; 0x01
 5aa:	9a 81       	ldd	r25, Y+2	; 0x02
 5ac:	ab 81       	ldd	r26, Y+3	; 0x03
 5ae:	bc 81       	ldd	r27, Y+4	; 0x04
 5b0:	81 31       	cpi	r24, 0x11	; 17
 5b2:	97 42       	sbci	r25, 0x27	; 39
 5b4:	a1 05       	cpc	r26, r1
 5b6:	b1 05       	cpc	r27, r1
 5b8:	a0 f4       	brcc	.+40     	; 0x5e2 <delay2+0x4e>
 5ba:	89 81       	ldd	r24, Y+1	; 0x01
 5bc:	9a 81       	ldd	r25, Y+2	; 0x02
 5be:	ab 81       	ldd	r26, Y+3	; 0x03
 5c0:	bc 81       	ldd	r27, Y+4	; 0x04
 5c2:	01 96       	adiw	r24, 0x01	; 1
 5c4:	a1 1d       	adc	r26, r1
 5c6:	b1 1d       	adc	r27, r1
 5c8:	89 83       	std	Y+1, r24	; 0x01
 5ca:	9a 83       	std	Y+2, r25	; 0x02
 5cc:	ab 83       	std	Y+3, r26	; 0x03
 5ce:	bc 83       	std	Y+4, r27	; 0x04
 5d0:	89 81       	ldd	r24, Y+1	; 0x01
 5d2:	9a 81       	ldd	r25, Y+2	; 0x02
 5d4:	ab 81       	ldd	r26, Y+3	; 0x03
 5d6:	bc 81       	ldd	r27, Y+4	; 0x04
 5d8:	81 31       	cpi	r24, 0x11	; 17
 5da:	97 42       	sbci	r25, 0x27	; 39
 5dc:	a1 05       	cpc	r26, r1
 5de:	b1 05       	cpc	r27, r1
 5e0:	60 f3       	brcs	.-40     	; 0x5ba <delay2+0x26>
 5e2:	24 96       	adiw	r28, 0x04	; 4
 5e4:	cd bf       	out	0x3d, r28	; 61
 5e6:	de bf       	out	0x3e, r29	; 62
 5e8:	df 91       	pop	r29
 5ea:	cf 91       	pop	r28
 5ec:	08 95       	ret

000005ee <main>:
void record_key(int button);
int out_compare();

int main(void)
{
	init_EBI();
 5ee:	2b de       	rcall	.-938    	; 0x246 <init_EBI>
	init_lcd();
 5f0:	5a de       	rcall	.-844    	; 0x2a6 <init_lcd>
	k_init();
 5f2:	cd de       	rcall	.-614    	; 0x38e <k_init>
	init_remote();
 5f4:	36 df       	rcall	.-404    	; 0x462 <init_remote>
	char input = '&';
	
	while(1)
    {	
		char assoc_key = '&';
		__far_mem_write(LCD_COM, 0x01);
 5f6:	0f 2e       	mov	r0, r31
 5f8:	c1 2c       	mov	r12, r1
 5fa:	f0 e1       	ldi	r31, 0x10	; 16
 5fc:	df 2e       	mov	r13, r31
 5fe:	fb e1       	ldi	r31, 0x1B	; 27
 600:	ef 2e       	mov	r14, r31
 602:	f1 2c       	mov	r15, r1
 604:	f0 2d       	mov	r31, r0
 606:	11 e0       	ldi	r17, 0x01	; 1
		check_BF();
		out_string("1) Record a key");
		__far_mem_write(LCD_COM, 0xC0);
 608:	00 ec       	ldi	r16, 0xC0	; 192
				{
					assoc_key = get_key();
				}
				__far_mem_write(LCD_COM, 0x01);
				check_BF();
				TCE1_CTRLB = TC0_CCAEN_bm;
 60a:	c1 e4       	ldi	r28, 0x41	; 65
 60c:	da e0       	ldi	r29, 0x0A	; 10
 60e:	68 94       	set
 610:	bb 24       	eor	r11, r11
 612:	b4 f8       	bld	r11, 4
	char input = '&';
	
	while(1)
    {	
		char assoc_key = '&';
		__far_mem_write(LCD_COM, 0x01);
 614:	0b b6       	in	r0, 0x3b	; 59
 616:	eb be       	out	0x3b, r14	; 59
 618:	f6 01       	movw	r30, r12
 61a:	10 83       	st	Z, r17
 61c:	0b be       	out	0x3b, r0	; 59
		check_BF();
 61e:	2c de       	rcall	.-936    	; 0x278 <check_BF>
		out_string("1) Record a key");
 620:	80 e0       	ldi	r24, 0x00	; 0
 622:	90 e2       	ldi	r25, 0x20	; 32
 624:	63 de       	rcall	.-826    	; 0x2ec <out_string>
		__far_mem_write(LCD_COM, 0xC0);
 626:	0b b6       	in	r0, 0x3b	; 59
 628:	eb be       	out	0x3b, r14	; 59
 62a:	f6 01       	movw	r30, r12
 62c:	00 83       	st	Z, r16
 62e:	0b be       	out	0x3b, r0	; 59
		check_BF();
 630:	23 de       	rcall	.-954    	; 0x278 <check_BF>
		out_string("2) Play");
 632:	80 e1       	ldi	r24, 0x10	; 16
 634:	90 e2       	ldi	r25, 0x20	; 32
 636:	5a de       	rcall	.-844    	; 0x2ec <out_string>
		input = get_key();
 638:	ba de       	rcall	.-652    	; 0x3ae <get_key>
		
		switch(input) {
 63a:	81 33       	cpi	r24, 0x31	; 49
 63c:	19 f0       	breq	.+6      	; 0x644 <main+0x56>
 63e:	82 33       	cpi	r24, 0x32	; 50
 640:	49 f3       	breq	.-46     	; 0x614 <main+0x26>
 642:	22 c0       	rjmp	.+68     	; 0x688 <main+0x9a>
			case '1':
				//record
				__far_mem_write(LCD_COM, 0x01);
 644:	0b b6       	in	r0, 0x3b	; 59
 646:	eb be       	out	0x3b, r14	; 59
 648:	f6 01       	movw	r30, r12
 64a:	10 83       	st	Z, r17
 64c:	0b be       	out	0x3b, r0	; 59
				check_BF();
 64e:	14 de       	rcall	.-984    	; 0x278 <check_BF>
				out_string("Record:");
 650:	88 e1       	ldi	r24, 0x18	; 24
 652:	90 e2       	ldi	r25, 0x20	; 32
 654:	4b de       	rcall	.-874    	; 0x2ec <out_string>
				__far_mem_write(LCD_COM, 0xC0);
 656:	0b b6       	in	r0, 0x3b	; 59
 658:	eb be       	out	0x3b, r14	; 59
 65a:	f6 01       	movw	r30, r12
 65c:	00 83       	st	Z, r16
 65e:	0b be       	out	0x3b, r0	; 59
				check_BF();
 660:	0b de       	rcall	.-1002   	; 0x278 <check_BF>
				out_string("Press keypad");
 662:	80 e2       	ldi	r24, 0x20	; 32
 664:	90 e2       	ldi	r25, 0x20	; 32
 666:	42 de       	rcall	.-892    	; 0x2ec <out_string>
				delay();
 668:	68 df       	rcall	.-304    	; 0x53a <delay>
				while (assoc_key != '&')
				{
					assoc_key = get_key();
				}
				__far_mem_write(LCD_COM, 0x01);
 66a:	0b b6       	in	r0, 0x3b	; 59
 66c:	eb be       	out	0x3b, r14	; 59
 66e:	f6 01       	movw	r30, r12
 670:	10 83       	st	Z, r17
 672:	0b be       	out	0x3b, r0	; 59
				check_BF();
 674:	01 de       	rcall	.-1022   	; 0x278 <check_BF>
				TCE1_CTRLB = TC0_CCAEN_bm;
 676:	b8 82       	st	Y, r11
				out_string("Press remote");
 678:	8d e2       	ldi	r24, 0x2D	; 45
 67a:	90 e2       	ldi	r25, 0x20	; 32
 67c:	37 de       	rcall	.-914    	; 0x2ec <out_string>
				delay();
 67e:	5d df       	rcall	.-326    	; 0x53a <delay>

void check_button(char button) {
	char c = button;
	int nice = c - '0';
	if (nice < 10 || nice >= 0) {
		record_key(nice);
 680:	86 ef       	ldi	r24, 0xF6	; 246
 682:	9f ef       	ldi	r25, 0xFF	; 255
 684:	44 df       	rcall	.-376    	; 0x50e <record_key>
 686:	c6 cf       	rjmp	.-116    	; 0x614 <main+0x26>
				break;
			case '2':
				//play something
				break;
			default:
				delay2();
 688:	85 df       	rcall	.-246    	; 0x594 <delay2>
				break;   
 68a:	c4 cf       	rjmp	.-120    	; 0x614 <main+0x26>

0000068c <_exit>:
 68c:	f8 94       	cli

0000068e <__stop_program>:
 68e:	ff cf       	rjmp	.-2      	; 0x68e <__stop_program>
