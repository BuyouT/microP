
final_RSR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000c  00802000  000003f6  0000046a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000476  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 000000a0  00000000  00000000  000004a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000013f2  00000000  00000000  00000546  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000002ef  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000584  00000000  00000000  00001c27  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  000001a0  00000000  00000000  000021ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000098c  00000000  00000000  0000234c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    0000045c  00000000  00000000  00002cd8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000c0  00000000  00000000  00003134  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	fd c0       	rjmp	.+506    	; 0x1fc <__ctors_end>
   2:	00 00       	nop
   4:	17 c1       	rjmp	.+558    	; 0x234 <__bad_interrupt>
   6:	00 00       	nop
   8:	15 c1       	rjmp	.+554    	; 0x234 <__bad_interrupt>
   a:	00 00       	nop
   c:	13 c1       	rjmp	.+550    	; 0x234 <__bad_interrupt>
   e:	00 00       	nop
  10:	11 c1       	rjmp	.+546    	; 0x234 <__bad_interrupt>
  12:	00 00       	nop
  14:	0f c1       	rjmp	.+542    	; 0x234 <__bad_interrupt>
  16:	00 00       	nop
  18:	0d c1       	rjmp	.+538    	; 0x234 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	0b c1       	rjmp	.+534    	; 0x234 <__bad_interrupt>
  1e:	00 00       	nop
  20:	09 c1       	rjmp	.+530    	; 0x234 <__bad_interrupt>
  22:	00 00       	nop
  24:	07 c1       	rjmp	.+526    	; 0x234 <__bad_interrupt>
  26:	00 00       	nop
  28:	05 c1       	rjmp	.+522    	; 0x234 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	03 c1       	rjmp	.+518    	; 0x234 <__bad_interrupt>
  2e:	00 00       	nop
  30:	01 c1       	rjmp	.+514    	; 0x234 <__bad_interrupt>
  32:	00 00       	nop
  34:	ff c0       	rjmp	.+510    	; 0x234 <__bad_interrupt>
  36:	00 00       	nop
  38:	fd c0       	rjmp	.+506    	; 0x234 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	fb c0       	rjmp	.+502    	; 0x234 <__bad_interrupt>
  3e:	00 00       	nop
  40:	f9 c0       	rjmp	.+498    	; 0x234 <__bad_interrupt>
  42:	00 00       	nop
  44:	f7 c0       	rjmp	.+494    	; 0x234 <__bad_interrupt>
  46:	00 00       	nop
  48:	f5 c0       	rjmp	.+490    	; 0x234 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	f3 c0       	rjmp	.+486    	; 0x234 <__bad_interrupt>
  4e:	00 00       	nop
  50:	f1 c0       	rjmp	.+482    	; 0x234 <__bad_interrupt>
  52:	00 00       	nop
  54:	ef c0       	rjmp	.+478    	; 0x234 <__bad_interrupt>
  56:	00 00       	nop
  58:	ed c0       	rjmp	.+474    	; 0x234 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	eb c0       	rjmp	.+470    	; 0x234 <__bad_interrupt>
  5e:	00 00       	nop
  60:	e9 c0       	rjmp	.+466    	; 0x234 <__bad_interrupt>
  62:	00 00       	nop
  64:	e7 c0       	rjmp	.+462    	; 0x234 <__bad_interrupt>
  66:	00 00       	nop
  68:	e5 c0       	rjmp	.+458    	; 0x234 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	e3 c0       	rjmp	.+454    	; 0x234 <__bad_interrupt>
  6e:	00 00       	nop
  70:	e1 c0       	rjmp	.+450    	; 0x234 <__bad_interrupt>
  72:	00 00       	nop
  74:	df c0       	rjmp	.+446    	; 0x234 <__bad_interrupt>
  76:	00 00       	nop
  78:	dd c0       	rjmp	.+442    	; 0x234 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	db c0       	rjmp	.+438    	; 0x234 <__bad_interrupt>
  7e:	00 00       	nop
  80:	d9 c0       	rjmp	.+434    	; 0x234 <__bad_interrupt>
  82:	00 00       	nop
  84:	d7 c0       	rjmp	.+430    	; 0x234 <__bad_interrupt>
  86:	00 00       	nop
  88:	d5 c0       	rjmp	.+426    	; 0x234 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	d3 c0       	rjmp	.+422    	; 0x234 <__bad_interrupt>
  8e:	00 00       	nop
  90:	d1 c0       	rjmp	.+418    	; 0x234 <__bad_interrupt>
  92:	00 00       	nop
  94:	cf c0       	rjmp	.+414    	; 0x234 <__bad_interrupt>
  96:	00 00       	nop
  98:	cd c0       	rjmp	.+410    	; 0x234 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	cb c0       	rjmp	.+406    	; 0x234 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	c9 c0       	rjmp	.+402    	; 0x234 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	c7 c0       	rjmp	.+398    	; 0x234 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	c5 c0       	rjmp	.+394    	; 0x234 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	c3 c0       	rjmp	.+390    	; 0x234 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	c1 c0       	rjmp	.+386    	; 0x234 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	bf c0       	rjmp	.+382    	; 0x234 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	bd c0       	rjmp	.+378    	; 0x234 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	bb c0       	rjmp	.+374    	; 0x234 <__bad_interrupt>
  be:	00 00       	nop
  c0:	b9 c0       	rjmp	.+370    	; 0x234 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	b7 c0       	rjmp	.+366    	; 0x234 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	b5 c0       	rjmp	.+362    	; 0x234 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	b3 c0       	rjmp	.+358    	; 0x234 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	b1 c0       	rjmp	.+354    	; 0x234 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	3b c1       	rjmp	.+630    	; 0x34c <__vector_53>
  d6:	00 00       	nop
  d8:	ad c0       	rjmp	.+346    	; 0x234 <__bad_interrupt>
  da:	00 00       	nop
  dc:	ab c0       	rjmp	.+342    	; 0x234 <__bad_interrupt>
  de:	00 00       	nop
  e0:	a9 c0       	rjmp	.+338    	; 0x234 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	a7 c0       	rjmp	.+334    	; 0x234 <__bad_interrupt>
  e6:	00 00       	nop
  e8:	a5 c0       	rjmp	.+330    	; 0x234 <__bad_interrupt>
  ea:	00 00       	nop
  ec:	a3 c0       	rjmp	.+326    	; 0x234 <__bad_interrupt>
  ee:	00 00       	nop
  f0:	a1 c0       	rjmp	.+322    	; 0x234 <__bad_interrupt>
  f2:	00 00       	nop
  f4:	9f c0       	rjmp	.+318    	; 0x234 <__bad_interrupt>
  f6:	00 00       	nop
  f8:	9d c0       	rjmp	.+314    	; 0x234 <__bad_interrupt>
  fa:	00 00       	nop
  fc:	9b c0       	rjmp	.+310    	; 0x234 <__bad_interrupt>
  fe:	00 00       	nop
 100:	99 c0       	rjmp	.+306    	; 0x234 <__bad_interrupt>
 102:	00 00       	nop
 104:	97 c0       	rjmp	.+302    	; 0x234 <__bad_interrupt>
 106:	00 00       	nop
 108:	95 c0       	rjmp	.+298    	; 0x234 <__bad_interrupt>
 10a:	00 00       	nop
 10c:	93 c0       	rjmp	.+294    	; 0x234 <__bad_interrupt>
 10e:	00 00       	nop
 110:	91 c0       	rjmp	.+290    	; 0x234 <__bad_interrupt>
 112:	00 00       	nop
 114:	8f c0       	rjmp	.+286    	; 0x234 <__bad_interrupt>
 116:	00 00       	nop
 118:	8d c0       	rjmp	.+282    	; 0x234 <__bad_interrupt>
 11a:	00 00       	nop
 11c:	8b c0       	rjmp	.+278    	; 0x234 <__bad_interrupt>
 11e:	00 00       	nop
 120:	89 c0       	rjmp	.+274    	; 0x234 <__bad_interrupt>
 122:	00 00       	nop
 124:	87 c0       	rjmp	.+270    	; 0x234 <__bad_interrupt>
 126:	00 00       	nop
 128:	85 c0       	rjmp	.+266    	; 0x234 <__bad_interrupt>
 12a:	00 00       	nop
 12c:	83 c0       	rjmp	.+262    	; 0x234 <__bad_interrupt>
 12e:	00 00       	nop
 130:	81 c0       	rjmp	.+258    	; 0x234 <__bad_interrupt>
 132:	00 00       	nop
 134:	7f c0       	rjmp	.+254    	; 0x234 <__bad_interrupt>
 136:	00 00       	nop
 138:	7d c0       	rjmp	.+250    	; 0x234 <__bad_interrupt>
 13a:	00 00       	nop
 13c:	7b c0       	rjmp	.+246    	; 0x234 <__bad_interrupt>
 13e:	00 00       	nop
 140:	79 c0       	rjmp	.+242    	; 0x234 <__bad_interrupt>
 142:	00 00       	nop
 144:	77 c0       	rjmp	.+238    	; 0x234 <__bad_interrupt>
 146:	00 00       	nop
 148:	75 c0       	rjmp	.+234    	; 0x234 <__bad_interrupt>
 14a:	00 00       	nop
 14c:	73 c0       	rjmp	.+230    	; 0x234 <__bad_interrupt>
 14e:	00 00       	nop
 150:	71 c0       	rjmp	.+226    	; 0x234 <__bad_interrupt>
 152:	00 00       	nop
 154:	6f c0       	rjmp	.+222    	; 0x234 <__bad_interrupt>
 156:	00 00       	nop
 158:	6d c0       	rjmp	.+218    	; 0x234 <__bad_interrupt>
 15a:	00 00       	nop
 15c:	6b c0       	rjmp	.+214    	; 0x234 <__bad_interrupt>
 15e:	00 00       	nop
 160:	69 c0       	rjmp	.+210    	; 0x234 <__bad_interrupt>
 162:	00 00       	nop
 164:	67 c0       	rjmp	.+206    	; 0x234 <__bad_interrupt>
 166:	00 00       	nop
 168:	65 c0       	rjmp	.+202    	; 0x234 <__bad_interrupt>
 16a:	00 00       	nop
 16c:	63 c0       	rjmp	.+198    	; 0x234 <__bad_interrupt>
 16e:	00 00       	nop
 170:	61 c0       	rjmp	.+194    	; 0x234 <__bad_interrupt>
 172:	00 00       	nop
 174:	5f c0       	rjmp	.+190    	; 0x234 <__bad_interrupt>
 176:	00 00       	nop
 178:	5d c0       	rjmp	.+186    	; 0x234 <__bad_interrupt>
 17a:	00 00       	nop
 17c:	5b c0       	rjmp	.+182    	; 0x234 <__bad_interrupt>
 17e:	00 00       	nop
 180:	59 c0       	rjmp	.+178    	; 0x234 <__bad_interrupt>
 182:	00 00       	nop
 184:	57 c0       	rjmp	.+174    	; 0x234 <__bad_interrupt>
 186:	00 00       	nop
 188:	55 c0       	rjmp	.+170    	; 0x234 <__bad_interrupt>
 18a:	00 00       	nop
 18c:	53 c0       	rjmp	.+166    	; 0x234 <__bad_interrupt>
 18e:	00 00       	nop
 190:	51 c0       	rjmp	.+162    	; 0x234 <__bad_interrupt>
 192:	00 00       	nop
 194:	4f c0       	rjmp	.+158    	; 0x234 <__bad_interrupt>
 196:	00 00       	nop
 198:	4d c0       	rjmp	.+154    	; 0x234 <__bad_interrupt>
 19a:	00 00       	nop
 19c:	4b c0       	rjmp	.+150    	; 0x234 <__bad_interrupt>
 19e:	00 00       	nop
 1a0:	49 c0       	rjmp	.+146    	; 0x234 <__bad_interrupt>
 1a2:	00 00       	nop
 1a4:	47 c0       	rjmp	.+142    	; 0x234 <__bad_interrupt>
 1a6:	00 00       	nop
 1a8:	45 c0       	rjmp	.+138    	; 0x234 <__bad_interrupt>
 1aa:	00 00       	nop
 1ac:	43 c0       	rjmp	.+134    	; 0x234 <__bad_interrupt>
 1ae:	00 00       	nop
 1b0:	41 c0       	rjmp	.+130    	; 0x234 <__bad_interrupt>
 1b2:	00 00       	nop
 1b4:	3f c0       	rjmp	.+126    	; 0x234 <__bad_interrupt>
 1b6:	00 00       	nop
 1b8:	3d c0       	rjmp	.+122    	; 0x234 <__bad_interrupt>
 1ba:	00 00       	nop
 1bc:	3b c0       	rjmp	.+118    	; 0x234 <__bad_interrupt>
 1be:	00 00       	nop
 1c0:	39 c0       	rjmp	.+114    	; 0x234 <__bad_interrupt>
 1c2:	00 00       	nop
 1c4:	37 c0       	rjmp	.+110    	; 0x234 <__bad_interrupt>
 1c6:	00 00       	nop
 1c8:	35 c0       	rjmp	.+106    	; 0x234 <__bad_interrupt>
 1ca:	00 00       	nop
 1cc:	33 c0       	rjmp	.+102    	; 0x234 <__bad_interrupt>
 1ce:	00 00       	nop
 1d0:	31 c0       	rjmp	.+98     	; 0x234 <__bad_interrupt>
 1d2:	00 00       	nop
 1d4:	2f c0       	rjmp	.+94     	; 0x234 <__bad_interrupt>
 1d6:	00 00       	nop
 1d8:	2d c0       	rjmp	.+90     	; 0x234 <__bad_interrupt>
 1da:	00 00       	nop
 1dc:	2b c0       	rjmp	.+86     	; 0x234 <__bad_interrupt>
 1de:	00 00       	nop
 1e0:	29 c0       	rjmp	.+82     	; 0x234 <__bad_interrupt>
 1e2:	00 00       	nop
 1e4:	27 c0       	rjmp	.+78     	; 0x234 <__bad_interrupt>
 1e6:	00 00       	nop
 1e8:	25 c0       	rjmp	.+74     	; 0x234 <__bad_interrupt>
 1ea:	00 00       	nop
 1ec:	23 c0       	rjmp	.+70     	; 0x234 <__bad_interrupt>
 1ee:	00 00       	nop
 1f0:	21 c0       	rjmp	.+66     	; 0x234 <__bad_interrupt>
 1f2:	00 00       	nop
 1f4:	1f c0       	rjmp	.+62     	; 0x234 <__bad_interrupt>
 1f6:	00 00       	nop
 1f8:	1d c0       	rjmp	.+58     	; 0x234 <__bad_interrupt>
	...

000001fc <__ctors_end>:
 1fc:	11 24       	eor	r1, r1
 1fe:	1f be       	out	0x3f, r1	; 63
 200:	cf ef       	ldi	r28, 0xFF	; 255
 202:	cd bf       	out	0x3d, r28	; 61
 204:	df e3       	ldi	r29, 0x3F	; 63
 206:	de bf       	out	0x3e, r29	; 62
 208:	00 e0       	ldi	r16, 0x00	; 0
 20a:	0c bf       	out	0x3c, r16	; 60
 20c:	18 be       	out	0x38, r1	; 56
 20e:	19 be       	out	0x39, r1	; 57
 210:	1a be       	out	0x3a, r1	; 58
 212:	1b be       	out	0x3b, r1	; 59

00000214 <__do_copy_data>:
 214:	10 e2       	ldi	r17, 0x20	; 32
 216:	a0 e0       	ldi	r26, 0x00	; 0
 218:	b0 e2       	ldi	r27, 0x20	; 32
 21a:	e6 ef       	ldi	r30, 0xF6	; 246
 21c:	f3 e0       	ldi	r31, 0x03	; 3
 21e:	00 e0       	ldi	r16, 0x00	; 0
 220:	0b bf       	out	0x3b, r16	; 59
 222:	02 c0       	rjmp	.+4      	; 0x228 <__do_copy_data+0x14>
 224:	07 90       	elpm	r0, Z+
 226:	0d 92       	st	X+, r0
 228:	ac 30       	cpi	r26, 0x0C	; 12
 22a:	b1 07       	cpc	r27, r17
 22c:	d9 f7       	brne	.-10     	; 0x224 <__do_copy_data+0x10>
 22e:	1b be       	out	0x3b, r1	; 59
 230:	cb d0       	rcall	.+406    	; 0x3c8 <main>
 232:	df c0       	rjmp	.+446    	; 0x3f2 <_exit>

00000234 <__bad_interrupt>:
 234:	e5 ce       	rjmp	.-566    	; 0x0 <__vectors>

00000236 <check_BF>:
		//go to the next line when ends the line
		OUT_CHAR(temp);
		temp++;
	}
	check_BF();
}
 236:	cf 93       	push	r28
 238:	df 93       	push	r29
 23a:	1f 92       	push	r1
 23c:	cd b7       	in	r28, 0x3d	; 61
 23e:	de b7       	in	r29, 0x3e	; 62
 240:	19 82       	std	Y+1, r1	; 0x01
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	90 e1       	ldi	r25, 0x10	; 16
 246:	ab e1       	ldi	r26, 0x1B	; 27
 248:	b0 e0       	ldi	r27, 0x00	; 0
 24a:	0b b6       	in	r0, 0x3b	; 59
 24c:	ab bf       	out	0x3b, r26	; 59
 24e:	fc 01       	movw	r30, r24
 250:	20 81       	ld	r18, Z
 252:	0b be       	out	0x3b, r0	; 59
 254:	29 83       	std	Y+1, r18	; 0x01
 256:	29 81       	ldd	r18, Y+1	; 0x01
 258:	22 23       	and	r18, r18
 25a:	bc f3       	brlt	.-18     	; 0x24a <check_BF+0x14>
 25c:	0f 90       	pop	r0
 25e:	df 91       	pop	r29
 260:	cf 91       	pop	r28
 262:	08 95       	ret

00000264 <init_lcd>:
 264:	e8 df       	rcall	.-48     	; 0x236 <check_BF>
 266:	28 e3       	ldi	r18, 0x38	; 56
 268:	80 e0       	ldi	r24, 0x00	; 0
 26a:	90 e1       	ldi	r25, 0x10	; 16
 26c:	ab e1       	ldi	r26, 0x1B	; 27
 26e:	b0 e0       	ldi	r27, 0x00	; 0
 270:	0b b6       	in	r0, 0x3b	; 59
 272:	ab bf       	out	0x3b, r26	; 59
 274:	fc 01       	movw	r30, r24
 276:	20 83       	st	Z, r18
 278:	0b be       	out	0x3b, r0	; 59
 27a:	dd df       	rcall	.-70     	; 0x236 <check_BF>
 27c:	2f e0       	ldi	r18, 0x0F	; 15
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	90 e1       	ldi	r25, 0x10	; 16
 282:	ab e1       	ldi	r26, 0x1B	; 27
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	0b b6       	in	r0, 0x3b	; 59
 288:	ab bf       	out	0x3b, r26	; 59
 28a:	fc 01       	movw	r30, r24
 28c:	20 83       	st	Z, r18
 28e:	0b be       	out	0x3b, r0	; 59
 290:	d2 df       	rcall	.-92     	; 0x236 <check_BF>
 292:	21 e0       	ldi	r18, 0x01	; 1
 294:	80 e0       	ldi	r24, 0x00	; 0
 296:	90 e1       	ldi	r25, 0x10	; 16
 298:	ab e1       	ldi	r26, 0x1B	; 27
 29a:	b0 e0       	ldi	r27, 0x00	; 0
 29c:	0b b6       	in	r0, 0x3b	; 59
 29e:	ab bf       	out	0x3b, r26	; 59
 2a0:	fc 01       	movw	r30, r24
 2a2:	20 83       	st	Z, r18
 2a4:	0b be       	out	0x3b, r0	; 59
 2a6:	c7 cf       	rjmp	.-114    	; 0x236 <check_BF>
 2a8:	08 95       	ret

000002aa <out_string>:
 2aa:	7f 92       	push	r7
 2ac:	8f 92       	push	r8
 2ae:	9f 92       	push	r9
 2b0:	af 92       	push	r10
 2b2:	bf 92       	push	r11
 2b4:	cf 92       	push	r12
 2b6:	df 92       	push	r13
 2b8:	ef 92       	push	r14
 2ba:	ff 92       	push	r15
 2bc:	0f 93       	push	r16
 2be:	1f 93       	push	r17
 2c0:	cf 93       	push	r28
 2c2:	df 93       	push	r29
 2c4:	ec 01       	movw	r28, r24
 2c6:	88 81       	ld	r24, Y
 2c8:	81 11       	cpse	r24, r1
 2ca:	19 c0       	rjmp	.+50     	; 0x2fe <out_string+0x54>
 2cc:	16 c0       	rjmp	.+44     	; 0x2fa <out_string+0x50>
 2ce:	b3 df       	rcall	.-154    	; 0x236 <check_BF>
 2d0:	00 31       	cpi	r16, 0x10	; 16
 2d2:	11 05       	cpc	r17, r1
 2d4:	31 f4       	brne	.+12     	; 0x2e2 <out_string+0x38>
 2d6:	0b b6       	in	r0, 0x3b	; 59
 2d8:	ab be       	out	0x3b, r10	; 59
 2da:	f4 01       	movw	r30, r8
 2dc:	70 82       	st	Z, r7
 2de:	0b be       	out	0x3b, r0	; 59
 2e0:	aa df       	rcall	.-172    	; 0x236 <check_BF>
 2e2:	a9 df       	rcall	.-174    	; 0x236 <check_BF>
 2e4:	89 91       	ld	r24, Y+
 2e6:	0b b6       	in	r0, 0x3b	; 59
 2e8:	eb be       	out	0x3b, r14	; 59
 2ea:	f6 01       	movw	r30, r12
 2ec:	80 83       	st	Z, r24
 2ee:	0b be       	out	0x3b, r0	; 59
 2f0:	0f 5f       	subi	r16, 0xFF	; 255
 2f2:	1f 4f       	sbci	r17, 0xFF	; 255
 2f4:	88 81       	ld	r24, Y
 2f6:	81 11       	cpse	r24, r1
 2f8:	ea cf       	rjmp	.-44     	; 0x2ce <out_string+0x24>
 2fa:	9d df       	rcall	.-198    	; 0x236 <check_BF>
 2fc:	19 c0       	rjmp	.+50     	; 0x330 <out_string+0x86>
 2fe:	9b df       	rcall	.-202    	; 0x236 <check_BF>
 300:	00 e0       	ldi	r16, 0x00	; 0
 302:	10 e0       	ldi	r17, 0x00	; 0
 304:	0f 2e       	mov	r0, r31
 306:	cc 24       	eor	r12, r12
 308:	c3 94       	inc	r12
 30a:	f0 e1       	ldi	r31, 0x10	; 16
 30c:	df 2e       	mov	r13, r31
 30e:	fb e1       	ldi	r31, 0x1B	; 27
 310:	ef 2e       	mov	r14, r31
 312:	f1 2c       	mov	r15, r1
 314:	f0 2d       	mov	r31, r0
 316:	0f 2e       	mov	r0, r31
 318:	81 2c       	mov	r8, r1
 31a:	f0 e1       	ldi	r31, 0x10	; 16
 31c:	9f 2e       	mov	r9, r31
 31e:	fb e1       	ldi	r31, 0x1B	; 27
 320:	af 2e       	mov	r10, r31
 322:	b1 2c       	mov	r11, r1
 324:	f0 2d       	mov	r31, r0
 326:	0f 2e       	mov	r0, r31
 328:	f0 ec       	ldi	r31, 0xC0	; 192
 32a:	7f 2e       	mov	r7, r31
 32c:	f0 2d       	mov	r31, r0
 32e:	d9 cf       	rjmp	.-78     	; 0x2e2 <out_string+0x38>
 330:	df 91       	pop	r29
 332:	cf 91       	pop	r28
 334:	1f 91       	pop	r17
 336:	0f 91       	pop	r16
 338:	ff 90       	pop	r15
 33a:	ef 90       	pop	r14
 33c:	df 90       	pop	r13
 33e:	cf 90       	pop	r12
 340:	bf 90       	pop	r11
 342:	af 90       	pop	r10
 344:	9f 90       	pop	r9
 346:	8f 90       	pop	r8
 348:	7f 90       	pop	r7
 34a:	08 95       	ret

0000034c <__vector_53>:
 34c:	1f 92       	push	r1
 34e:	0f 92       	push	r0
 350:	0f b6       	in	r0, 0x3f	; 63
 352:	0f 92       	push	r0
 354:	11 24       	eor	r1, r1
 356:	08 b6       	in	r0, 0x38	; 56
 358:	0f 92       	push	r0
 35a:	18 be       	out	0x38, r1	; 56
 35c:	10 92 00 0a 	sts	0x0A00, r1
 360:	0f 90       	pop	r0
 362:	08 be       	out	0x38, r0	; 56
 364:	0f 90       	pop	r0
 366:	0f be       	out	0x3f, r0	; 63
 368:	0f 90       	pop	r0
 36a:	1f 90       	pop	r1
 36c:	18 95       	reti

0000036e <delay>:

void delay () {
 36e:	cf 93       	push	r28
 370:	df 93       	push	r29
 372:	00 d0       	rcall	.+0      	; 0x374 <delay+0x6>
 374:	1f 92       	push	r1
 376:	cd b7       	in	r28, 0x3d	; 61
 378:	de b7       	in	r29, 0x3e	; 62
	volatile uint32_t ticks;            // Volatile prevents compiler optimization
	for(ticks=0;ticks<=20000;ticks++);  // Convenient delay
 37a:	19 82       	std	Y+1, r1	; 0x01
 37c:	1a 82       	std	Y+2, r1	; 0x02
 37e:	1b 82       	std	Y+3, r1	; 0x03
 380:	1c 82       	std	Y+4, r1	; 0x04
 382:	89 81       	ldd	r24, Y+1	; 0x01
 384:	9a 81       	ldd	r25, Y+2	; 0x02
 386:	ab 81       	ldd	r26, Y+3	; 0x03
 388:	bc 81       	ldd	r27, Y+4	; 0x04
 38a:	81 32       	cpi	r24, 0x21	; 33
 38c:	9e 44       	sbci	r25, 0x4E	; 78
 38e:	a1 05       	cpc	r26, r1
 390:	b1 05       	cpc	r27, r1
 392:	a0 f4       	brcc	.+40     	; 0x3bc <delay+0x4e>
 394:	89 81       	ldd	r24, Y+1	; 0x01
 396:	9a 81       	ldd	r25, Y+2	; 0x02
 398:	ab 81       	ldd	r26, Y+3	; 0x03
 39a:	bc 81       	ldd	r27, Y+4	; 0x04
 39c:	01 96       	adiw	r24, 0x01	; 1
 39e:	a1 1d       	adc	r26, r1
 3a0:	b1 1d       	adc	r27, r1
 3a2:	89 83       	std	Y+1, r24	; 0x01
 3a4:	9a 83       	std	Y+2, r25	; 0x02
 3a6:	ab 83       	std	Y+3, r26	; 0x03
 3a8:	bc 83       	std	Y+4, r27	; 0x04
 3aa:	89 81       	ldd	r24, Y+1	; 0x01
 3ac:	9a 81       	ldd	r25, Y+2	; 0x02
 3ae:	ab 81       	ldd	r26, Y+3	; 0x03
 3b0:	bc 81       	ldd	r27, Y+4	; 0x04
 3b2:	81 32       	cpi	r24, 0x21	; 33
 3b4:	9e 44       	sbci	r25, 0x4E	; 78
 3b6:	a1 05       	cpc	r26, r1
 3b8:	b1 05       	cpc	r27, r1
 3ba:	60 f3       	brcs	.-40     	; 0x394 <delay+0x26>
 3bc:	24 96       	adiw	r28, 0x04	; 4
 3be:	cd bf       	out	0x3d, r28	; 61
 3c0:	de bf       	out	0x3e, r29	; 62
 3c2:	df 91       	pop	r29
 3c4:	cf 91       	pop	r28
 3c6:	08 95       	ret

000003c8 <main>:
void OUT_USTRING(char *temp);
void delay();

int main(void)
{	
	init_lcd();
 3c8:	4d df       	rcall	.-358    	; 0x264 <init_lcd>
	char *schwartz = "4744 Rocks!";
	//char *newline = CR, LF, NULL;
	
    while(1)
    {	
		__far_mem_write(LCD_COM, 0x01);
 3ca:	0f 2e       	mov	r0, r31
 3cc:	c1 2c       	mov	r12, r1
 3ce:	f0 e1       	ldi	r31, 0x10	; 16
 3d0:	df 2e       	mov	r13, r31
 3d2:	fb e1       	ldi	r31, 0x1B	; 27
 3d4:	ef 2e       	mov	r14, r31
 3d6:	f1 2c       	mov	r15, r1
 3d8:	f0 2d       	mov	r31, r0
 3da:	c1 e0       	ldi	r28, 0x01	; 1
 3dc:	0b b6       	in	r0, 0x3b	; 59
 3de:	eb be       	out	0x3b, r14	; 59
 3e0:	f6 01       	movw	r30, r12
 3e2:	c0 83       	st	Z, r28
 3e4:	0b be       	out	0x3b, r0	; 59
		check_BF();
 3e6:	27 df       	rcall	.-434    	; 0x236 <check_BF>
        out_string(schwartz);
 3e8:	80 e0       	ldi	r24, 0x00	; 0
 3ea:	90 e2       	ldi	r25, 0x20	; 32
 3ec:	5e df       	rcall	.-324    	; 0x2aa <out_string>
		/*OUT_USTRING(*schwartz);
		OUT_USTRING(*newline);*/
		delay();
 3ee:	bf df       	rcall	.-130    	; 0x36e <delay>
 3f0:	f5 cf       	rjmp	.-22     	; 0x3dc <main+0x14>

000003f2 <_exit>:
 3f2:	f8 94       	cli

000003f4 <__stop_program>:
 3f4:	ff cf       	rjmp	.-2      	; 0x3f4 <__stop_program>
